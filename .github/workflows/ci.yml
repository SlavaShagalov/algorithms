name: 'CI'

on:
  push:
  pull_request:

env:
  BUILD_TYPE: Debug
  RUN_MEMORY_CHECK: ${{ (secrets.RUN_MEMORY_CHECK == 'true') }}

jobs:
  check-style:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    steps:
      - uses: actions/checkout@v3
      - run: ./run_linters.sh
  build:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build App and Tests
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: cd ${{github.workspace}}/build; ctest -C ${{env.BUILD_TYPE}}; cd ${{github.workspace}}

      - name: PWD
        run: pwd

      - name: LS
        run: ls -lah ${{github.workspace}}

      - name: LS
        run: ls -lah ${{github.workspace}}/build

      - name: LS
        run: ls -lah ${{github.workspace}}/build/Tests

      - name: Upload test
        uses: actions/upload-artifact@v3
        with:
          name: test
          path: ${{github.workspace}}/build/Tests

      - name: Upload test 2
        uses: actions/upload-artifact@v3
        with:
          name: test2
          path: build/Tests
  check-memory:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Download test
        uses: actions/download-artifact@v3
        with:
          name: test
          path: ${{github.workspace}}/build/Tests

      - name: PWD
        run: pwd

      - name: LS
        run: ls -lah ${{github.workspace}}

      - name: LS
        run: ls -lah ${{github.workspace}}/build

      - name: LS
        run: ls -lah ${{github.workspace}}/build/Tests

      - name: Run Tests with Valgrind
        run: valgrind --tool=memcheck --leak-check=full --xml=yes --xml-file=unit_tests_valgrind.xml ./build/Tests/Tests &> /dev/null

      - name: Valgrind Memory check
        if: ${{ env.RUN_MEMORY_CHECK == 'true' }}
        run: |
          echo "Checking Valgrind xml ..."
            ./check_memory.sh